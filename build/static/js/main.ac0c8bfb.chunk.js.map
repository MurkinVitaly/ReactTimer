{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["padTime","time","toString","padStart","App","useState","title","setTitle","timeLeft","setTimeLeft","isRunning","setIsRunning","intervalRef","useRef","console","log","current","minutes","Math","floor","seconds","className","onClick","setInterval","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAGA,SAASA,EAAQC,GACb,OAAOA,EAAKC,WAAWC,SAAS,EAAG,KAExB,SAASC,IAAO,IAAD,EACAC,mBAAS,8BADT,mBACnBC,EADmB,KACZC,EADY,OAEMF,mBAAS,MAFf,mBAEnBG,EAFmB,KAETC,EAFS,OAGQJ,oBAAS,GAHjB,mBAGnBK,EAHmB,KAGRC,EAHQ,KAIpBC,EAAcC,iBAAO,MAgB3BC,QAAQC,IAAIH,EAAYI,SAkBxB,IAAMC,EAAUjB,EAAQkB,KAAKC,MAAMX,EAAW,KACxCY,EAAUpB,EAAQQ,EAAqB,GAAVS,GAEnC,OACI,sBAAKI,UAAU,MAAf,UACI,6BAAKf,IAGL,sBAAKe,UAAU,QAAf,UACI,+BAAOJ,IACP,qCACA,+BAAOG,OAGX,sBAAKC,UAAU,UAAf,WACEX,GAAa,wBAAQY,QA/C/B,WACIf,EAAS,uBACmB,OAAxBK,EAAYI,UAChBL,GAAa,GACbC,EAAYI,QAAUO,aAAY,WAC9Bd,GAAY,SAAAD,GACR,OAAIA,GAAY,EAAUA,EAAW,EAG9B,OAEZ,OAoCgB,mBACdE,GAAa,wBAAQY,QAhC9B,WACIf,EAAS,cACmB,OAAxBK,EAAYI,UAChBQ,cAAcZ,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBL,GAAa,KA2BK,kBACd,wBAAQW,QAzBhB,WACIf,EAAS,8BACTiB,cAAcZ,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBP,EAAY,MACZE,GAAa,IAoBT,yBC7DZ,IAYec,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ac0c8bfb.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport \"./App.css\"\n\nfunction padTime(time) {\n    return time.toString().padStart(2, '0');\n}\nexport default function App() {\n    const [title, setTitle] = useState('Let the countdown begin!!!')\n    const [timeLeft, setTimeLeft] = useState(25 * 60);\n    const [isRunning, setIsRunning] = useState(false);\n    const intervalRef = useRef(null);\n\n    function startTimer() {\n        setTitle('You are doing great');\n        if (intervalRef.current !== null) return;\n        setIsRunning(true);\n        intervalRef.current = setInterval(() => {\n            setTimeLeft(timeLeft => {\n                if (timeLeft >= 1) return timeLeft - 1;\n\n                // reset the timer\n                return 0;\n            });\n        }, 1000);\n    }\n\n    console.log(intervalRef.current);\n\n    function stopTimer() {\n        setTitle('Keep it up');\n        if (intervalRef.current === null) return;\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n        setIsRunning(false);\n    }\n\n    function resetTimer() {\n        setTitle('Ready to go another round?')\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n        setTimeLeft(25 * 60);\n        setIsRunning(false);\n    }\n\n    const minutes = padTime(Math.floor(timeLeft / 60));\n    const seconds = padTime(timeLeft - minutes * 60);\n\n    return (\n        <div className='app'>\n            <h2>{title}</h2>\n\n\n            <div className='timer'>\n                <span>{minutes}</span>\n                <span>:</span>\n                <span>{seconds}</span>\n            </div>\n\n            <div className='buttons'>\n            {!isRunning && <button onClick={startTimer}>Start</button>}\n            {isRunning && <button onClick={stopTimer}>Stop</button>}\n            <button onClick={resetTimer}>Reset</button>\n            </div>\n        </div>\n    );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}